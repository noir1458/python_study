1.리스트

1.1. 자료의 집합

리스트는 여러개의 값을 집합적으로 저장한다. 다른 언어의 배열에 해당한다. [] 괄호 안에 요소를 콤바로 구분해서 나열함으로서 초기화 한다.

>예제
s=[88,95,78,100,99]
print(s[0])
print(s[2])
print(s[-1])

>결과
88
78
99



>예제
score=[88,95,70,100,99]
print(sum(score))
print(sum(score)/len(score))

sum=0
for s in score:
    sum+=s
print(sum)

>결과
452
90.4
452



1.2. 리스트의 요소

문자열과 똑같이 첫번째 요소가 [0]번, 뒤에서부터 셀때는 [-1] 부터 센다.

요소를 분리하는것도 문자열과 같다 [begin:end:step], 범위의 끝은 포함되지 않는다.

>예제
nums=[0,1,2,3,4,5,6,7,8,9]
print(nums[2:5])
print(nums[:4])
print(nums[6:])
print(nums[1:7:2])

>결과
[2, 3, 4]
[0, 1, 2, 3]
[6, 7, 8, 9]
[1, 3, 5]




>예제
nums=[0,1,2,3,4,5,6,7,8,9]
nums[2:5]=[20,30,40]
print(nums)
nums[2:5]=[]  #범위지정하고 지우기
print(nums)
del nums[0]   #한개의 요소내용만 지우기
print(nums)

>결과
[0, 1, 20, 30, 40, 5, 6, 7, 8, 9]
[0, 1, 5, 6, 7, 8, 9]
[1, 5, 6, 7, 8, 9]


문자열은 변경 불가능한 타입인데 비해 리스트는 변경할 수 있다는 큰 차이점이 있다. 리스트의 요소는 컬렉션에 포함되어 있을 뿐 개별적인 변수라서 []기호에 첨자를 지정하여 자유롭게 읽고 쓸 수 있다.
개별 요소뿐만 아니라 범위를 지정하여 여러 요소를 한꺼번에 일괄 변경할 수도 있다. 원본과 대입되는 값의 개수가 꼭 같을 필요는 없다. 그 자리에 더 많이 넣을수도 있다.
일정 범위에 빈 리스트를 대입하면 해당 범위의 리스트가 모두 삭제된다.

요소 하나만 삭제할때는 del명령을 사용한다


>예제
list1 = [1,2,3,4,5]
list2 = [10,11]
listadd=list1+list2
print(listadd)
listmulti=list2*4
print(listmulti)

>결과
[1, 2, 3, 4, 5, 10, 11]
[10, 11, 10, 11, 10, 11, 10, 11]


+, * 연산자의 동작도 문자열과 같다. +연산자로 리스트끼리 더하면 두 리스트를 연결한다. 리스트에 정수를 곱하면 요소를 정수번 반복한다.